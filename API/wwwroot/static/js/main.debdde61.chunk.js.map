{"version":3,"sources":["app/routes/routes.ts","app/state/gameSlice.ts","app/services/userSession.ts","app/state/sessionSlice.ts","app/state/levelSlice.ts","app/state/playerSlice.ts","app/state/errorSlice.ts","app/store.ts","app/state/stateService.ts","api/agentConfig.ts","images/mask.svg","api/agent.ts","app/services/levelService.ts","app/services/playerService.ts","app/services/engine.ts","components/forms/LoginForm.tsx","components/forms/RegistrationForm.tsx","components/header/Header.tsx","components/hints/Hint.tsx","components/hints/HintsContainer.tsx","components/keyboard/Key.tsx","components/keyboard/Keyboard.tsx","components/messages/GameOverMessage.tsx","components/messages/LevelCompleteMessage.tsx","components/messages/LoadingMessage.tsx","components/quiz/Quiz.tsx","components/playArea/PlayArea.tsx","images/character/hangman-0.png","images/character/hangman-2.png","images/character/hangman-3.png","images/character/hangman-1.png","images/character/hangman-4.png","images/character/hangman-5.png","components/sidebar/hangman/HangmanImage.tsx","images/character/hangman-6.png","components/sidebar/statistics/Statistics.tsx","components/sidebar/SideBar.tsx","components/gameboard/GameBoard.tsx","components/home/HomePage.tsx","components/errors/NotFound.tsx","components/errors/ServerError.tsx","components/errors/Unauthorized.tsx","components/leaderboard/Leaderboard.tsx","components/application/App.tsx","index.tsx"],"names":["routes","initialState","correctGuesses","failedGuesses","availableGuesses","isLoading","gameSlice","createSlice","name","reducers","processFailedGuess","state","reset","processCorrectGuess","action","payload","resetFailedGuesses","actions","userSession","token","localStorage","getItem","isTokenExpired","decodedToken","jwtDecode","exp","Date","now","loginSession","window","setItem","sessionState","login","removeToken","clear","isLogedIn","sessionSlice","logout","levelSlice","id","secret","clue","difficulty","gameScoreReward","hints","secretMask","starReward","isComplete","leftToGuess","loadLevel","split","map","length","updateMask","showHint","forEach","hint","show","playerSlice","userName","gameScore","stars","completeLevels","loadPlayer","addStars","removeStars","processLevelCompletion","errorSlice","message","statusCode","isSet","setError","rootReducers","combineReducers","level","levelReducer","player","playerReducer","session","sessionReducer","game","gameReducer","error","errorReducer","store","configureStore","reducer","gameState","dispatch","loading","guesses","errorState","playerSate","levelState","index","axios","defaults","baseURL","process","responseBody","response","data","interceptors","request","use","config","headers","Authorization","status","toast","dark","toString","history","push","Promise","reject","_path","url","get","then","body","post","agent","loginAsync","registerAsync","getCurrentPlayerAsync","processCompleteLevel","removeStarsAsync","deduction","getLevelAsync","restartAsync","showHintAsync","hintId","getLeaderboardData","loadLevelBase","promise","a","timeBeforeLoading","delay","setTimeout","levelService","restartLevel","playerService","completeLevel","model","engine","loginPlayer","values","returnPlayer","logOutPlayer","price","levelCompletionData","getState","levelId","GetLevelCompletionModel","registerPlayer","disableKey","e","target","classList","add","processGuess","letter","maskedSecret","toUpperCase","includes","verifyGuess","correctLetters","i","updatedMaskedSecret","getLeaderboard","restart","loadNewLevel","validationSchema","Yup","username","required","password","initialValues","LoginForm","onSubmit","loginValues","className","type","placeholder","autoComplete","to","confirmPassword","oneOf","RegistrationForm","handleSubmit","handleClick","Header","useSelector","onClick","Hint","props","playerStars","isDisabled","HintsContainer","Key","topRow","middleRow","bottomRow","Keyboard","key","GameOverMessage","LevelCompleteMessage","LoadingMessage","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMask","_ref","svgRef","title","titleId","focusable","role","xmlns","viewBox","ref","fill","d","ForwardRef","Quiz","hiddenSecret","PlayArea","isLevelComplete","isGameOver","hangman","hangman_5","hangman_4","hangman_3","hangman_2","hangman_1","hangman_0","HangmanImage","imageIndex","src","alt","Statistics","SideBar","GameBoard","HomePage","pathname","NotFound","ServerError","Unauthorized","Leaderboard","useState","records","setRecords","useEffect","console","log","row","goBack","App","isErrorSet","position","autoClose","hideProgressBar","exact","path","component","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.debdde61.chunk.js","sourcesContent":["const routes = {\r\n  homePage: \"/\",\r\n  login: \"/login\",\r\n  register: \"/register\",\r\n  gameBoard: \"/game-board\",\r\n  serverError: \"/server-error\",\r\n  leaderboard: \"/leaderboard\",\r\n};\r\n\r\nexport { routes };\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport store from \"../store\";\r\n\r\ninterface GameState {\r\n  failedGuesses: number;\r\n  correctGuesses: number;\r\n  availableGuesses: number;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst initialState: GameState = {\r\n  correctGuesses: 0,\r\n  failedGuesses: 0,\r\n  availableGuesses: 6,\r\n  isLoading: true,\r\n};\r\n\r\nconst gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    processFailedGuess: (state) => {\r\n      state.failedGuesses++;\r\n      state.availableGuesses--;\r\n    },\r\n    reset: (state) => {\r\n      return initialState;\r\n    },\r\n\r\n    processCorrectGuess: (state, action: PayloadAction<number>) => {\r\n      state.correctGuesses += action.payload;\r\n    },\r\n    isLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    resetFailedGuesses: (state) => {\r\n      state.failedGuesses = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { processFailedGuess, reset, processCorrectGuess, isLoading, resetFailedGuesses } = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;\r\n","import jwtDecode, { JwtPayload } from \"jwt-decode\";\r\nimport { sessionState } from \"../state/stateService\";\r\n\r\nexport const userSession = {\r\n  token: localStorage.getItem(\"token\"),\r\n\r\n  isTokenExpired: () => {\r\n    if (userSession.token === null) {\r\n      return true;\r\n    }\r\n    const decodedToken = jwtDecode<JwtPayload>(userSession.token);\r\n    if (decodedToken.exp) {\r\n      return decodedToken.exp * 1000 < Date.now();\r\n    }\r\n    return true;\r\n  },\r\n\r\n  loginSession: (token: string) => {\r\n    window.localStorage.setItem(\"token\", token);\r\n    sessionState.login();\r\n  },\r\n\r\n  removeToken: () => window.localStorage.clear(),\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { userSession } from \"../services/userSession\";\r\n\r\ninterface SessionState {\r\n  isLogedIn: boolean;\r\n}\r\n\r\nconst initialState: SessionState = {\r\n  isLogedIn: !userSession.isTokenExpired(),\r\n};\r\n\r\nconst sessionSlice = createSlice({\r\n  name: \"session\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    login: (state) => {\r\n      state.isLogedIn = true;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.isLogedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = sessionSlice.actions;\r\n\r\nexport default sessionSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Level } from \"../../interfaces/Level\";\r\nimport store from \"../store\";\r\n\r\nexport interface LevelState extends Level {\r\n  secretMask: string[];\r\n  isComplete: boolean;\r\n  leftToGuess: number;\r\n}\r\n\r\nconst initialState: LevelState = {\r\n  id: \"\",\r\n  secret: \"\",\r\n  clue: \"\",\r\n  difficulty: \"\",\r\n  gameScoreReward: 0,\r\n  hints: [],\r\n  secretMask: [],\r\n  starReward: 0,\r\n  isComplete: false,\r\n  leftToGuess: 0,\r\n};\r\n\r\nconst maskSecret = (secret: string) => {\r\n  return secret.split(\"\").map(() => {\r\n    return \"#\";\r\n  });\r\n};\r\n\r\nconst levelSlice = createSlice({\r\n  name: \"level\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    loadLevel: (state, action: PayloadAction<Level>) => {\r\n      return {\r\n        ...action.payload,\r\n        secretMask: maskSecret(action.payload.secret),\r\n        leftToGuess: action.payload.secret.length,\r\n        isComplete: false,\r\n      };\r\n    },\r\n    updateMask: (state, action: PayloadAction<number>) => {\r\n      state.secretMask[action.payload] = state.secret[action.payload];\r\n      state.leftToGuess--;\r\n      state.isComplete = state.leftToGuess === 0;\r\n    },\r\n    showHint: (state, action: PayloadAction<string>) => {\r\n      state.hints.forEach((hint) => {\r\n        if (hint.id === action.payload) {\r\n          hint.show = true;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loadLevel, updateMask, showHint } = levelSlice.actions;\r\n\r\nexport default levelSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Player } from \"../../interfaces/Player\";\r\nimport store from \"../store\";\r\n\r\ninterface PlayerState extends Player {}\r\n\r\nconst initialState: PlayerState = {\r\n  id: \"\",\r\n  userName: \"\",\r\n  gameScore: 0,\r\n  stars: 0,\r\n  completeLevels: 0,\r\n};\r\n\r\nconst playerSlice = createSlice({\r\n  name: \"player\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    loadPlayer: (state, action: PayloadAction<Player>) => {\r\n      return action.payload;\r\n    },\r\n    addStars: (state, action: PayloadAction<number>) => {\r\n      state.stars += action.payload;\r\n    },\r\n    removeStars: (state, action: PayloadAction<number>) => {\r\n      if (state.stars < action.payload) {\r\n        state.stars = 0;\r\n        return;\r\n      }\r\n\r\n      state.stars -= action.payload;\r\n    },\r\n    processLevelCompletion: (state, action: PayloadAction<number>) => {\r\n      state.completeLevels++;\r\n      state.gameScore += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loadPlayer, addStars, processLevelCompletion, removeStars } = playerSlice.actions;\r\n\r\nexport default playerSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ServerError } from \"../../interfaces/ServerError\";\r\n\r\ninterface ErrorState extends ServerError {\r\n  isSet: boolean;\r\n}\r\n\r\nconst initialState: ErrorState = {\r\n  message: \"\",\r\n  statusCode: 0,\r\n  isSet: false,\r\n};\r\n\r\nconst errorSlice = createSlice({\r\n  name: \"error\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setError: (state, action: PayloadAction<ServerError>) => {\r\n      state.message = action.payload.message;\r\n      state.statusCode = action.payload.statusCode;\r\n      state.isSet = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setError } = errorSlice.actions;\r\n\r\nexport default errorSlice.reducer;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport gameReducer from \"./state//gameSlice\";\r\nimport sessionReducer from \"./state//sessionSlice\";\r\nimport levelReducer from \"./state/levelSlice\";\r\nimport playerReducer from \"./state/playerSlice\";\r\nimport errorReducer from \"./state/errorSlice\";\r\n\r\nconst rootReducers = combineReducers({\r\n  level: levelReducer,\r\n  player: playerReducer,\r\n  session: sessionReducer,\r\n  game: gameReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducers,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import { Level } from \"../../interfaces/Level\";\r\nimport { Player } from \"../../interfaces/Player\";\r\nimport { ServerError } from \"../../interfaces/ServerError\";\r\nimport store from \"../store\";\r\nimport { setError } from \"./errorSlice\";\r\nimport { reset, isLoading, resetFailedGuesses, processFailedGuess, processCorrectGuess } from \"./gameSlice\";\r\nimport { showHint, loadLevel, updateMask } from \"./levelSlice\";\r\nimport { addStars, loadPlayer, removeStars, processLevelCompletion } from \"./playerSlice\";\r\nimport { login, logout } from \"./sessionSlice\";\r\n\r\nexport const gameState = {\r\n  reset: () => store.dispatch(reset()),\r\n  isLoading: (loading: boolean) => store.dispatch(isLoading(loading)),\r\n  resetFailedGuesses: () => store.dispatch(resetFailedGuesses()),\r\n  processFailedGuess: () => store.dispatch(processFailedGuess()),\r\n  processCorrectGuess: (guesses: number) => store.dispatch(processCorrectGuess(guesses)),\r\n};\r\n\r\nexport const errorState = {\r\n  set: (error: ServerError) => store.dispatch(setError(error)),\r\n};\r\n\r\nexport const sessionState = {\r\n  login: () => store.dispatch(login()),\r\n  logout: () => store.dispatch(logout()),\r\n};\r\n\r\nexport const playerSate = {\r\n  addStars: (stars: number) => store.dispatch(addStars(stars)),\r\n  loadPlayer: (player: Player) => store.dispatch(loadPlayer(player)),\r\n  removeStars: (stars: number) => store.dispatch(removeStars(stars)),\r\n  processLevelCompletion: (gameScore: number) => store.dispatch(processLevelCompletion(gameScore)),\r\n};\r\n\r\nexport const levelState = {\r\n  showHint: (id: string) => store.dispatch(showHint(id)),\r\n  loadLevel: (level: Level) => store.dispatch(loadLevel(level)),\r\n  updateMask: (index: number) => store.dispatch(updateMask(index)),\r\n};\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"..\";\r\nimport { routes } from \"../app/routes/routes\";\r\nimport { errorState } from \"../app/state/stateService\";\r\nimport { Level } from \"../interfaces/Level\";\r\nimport { Player } from \"../interfaces/Player\";\r\n\r\n// base api URL\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\n// configure axios to send auth toked with every request\r\naxios.interceptors.request.use((config) => {\r\n  const token = window.localStorage.getItem(\"token\");\r\n\r\n  if (token != null) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  (response: AxiosResponse<Level | Player>) => {\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        toast.dark(data.toString());\r\n        break;\r\n      case 401:\r\n        toast.dark(\"unauthorised\");\r\n        break;\r\n      case 404:\r\n        toast.dark(\"not found\");\r\n        break;\r\n      case 500:\r\n        errorState.set(data);\r\n        history.push(routes.serverError);\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst headers = {\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const request = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body, headers).then(responseBody),\r\n};\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMask(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"far\",\n    \"data-icon\": \"question-circle\",\n    className: \"svg-inline--fa fa-question-circle fa-w-16\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMask);\nexport default __webpack_public_path__ + \"static/media/mask.a547bb3d.svg\";\nexport { ForwardRef as ReactComponent };","import { CompleteLevelModel } from \"../interfaces/CompleteLevelModel\";\r\nimport { FormModel } from \"../interfaces/FormModel\";\r\nimport { LeaderboardEntry } from \"../interfaces/LeaderboardEntry\";\r\nimport { Level } from \"../interfaces/Level\";\r\nimport { Login } from \"../interfaces/Login\";\r\nimport { Player } from \"../interfaces/Player\";\r\nimport { request } from \"./agentConfig\";\r\n\r\nconst accountService = {\r\n  loginAsync: (body: FormModel) => request.post<Login>(\"/account/login\", body),\r\n  registerAsync: (body: FormModel) => request.post<Login>(\"/account/register\", body),\r\n};\r\n\r\nconst levelService = {\r\n  getLevelAsync: () => request.get<Level>(\"/game/level\"),\r\n  restartAsync: () => request.get<Level>(\"/game/restart\"),\r\n  showHintAsync: (hintId: string) => request.post(\"/Game/showHint\", { hintId: hintId }),\r\n};\r\n\r\nconst playerService = {\r\n  getCurrentPlayerAsync: () => request.get<Player>(\"/account/getplayer\"),\r\n  processCompleteLevel: (data: CompleteLevelModel) => request.post(\"/game/prosesscompleteLevel\", data),\r\n  removeStarsAsync: (stars: number) => request.post(\"/game/removestars\", { deduction: stars }),\r\n};\r\n\r\nconst gameService = {\r\n  getLeaderboardData: () => request.get<LeaderboardEntry[]>(\"/game/leaderboard\"),\r\n};\r\n\r\nexport const agent = {\r\n  accountService,\r\n  playerService,\r\n  levelService,\r\n  gameService,\r\n};\r\n","import { agent } from \"../../api/agent\";\r\nimport { Level } from \"../../interfaces/Level\";\r\nimport { gameState, levelState } from \"../state/stateService\";\r\n\r\nconst loadLevelBase = async (promise: Promise<Level>) => {\r\n  const initialDelay = 1000;\r\n  const timeBeforeLoading = Date.now();\r\n\r\n  promise.then((response) => {\r\n    levelState.loadLevel(response);\r\n    const timeAfterLoading = Date.now();\r\n    const loadingTime = timeAfterLoading - timeBeforeLoading;\r\n    let delay = initialDelay - loadingTime;\r\n    delay = delay > 0 ? delay : 0;\r\n    setTimeout(() => {\r\n      gameState.isLoading(false);\r\n    }, delay);\r\n  });\r\n};\r\n\r\nexport const levelService = {\r\n  showHint: async (id: string) => {\r\n    await agent.levelService.showHintAsync(id).then(() => {\r\n      levelState.showHint(id);\r\n    });\r\n  },\r\n\r\n  loadLevel: () => loadLevelBase(agent.levelService.getLevelAsync()),\r\n\r\n  restartLevel: () => loadLevelBase(agent.levelService.restartAsync()),\r\n};\r\n","import { agent } from \"../../api/agent\";\r\nimport { CompleteLevelModel } from \"../../interfaces/CompleteLevelModel\";\r\nimport { gameState, playerSate } from \"../state/stateService\";\r\n\r\nexport const playerService = {\r\n  loadPlayer: async () => {\r\n    gameState.isLoading(true);\r\n    await agent.playerService.getCurrentPlayerAsync().then((response) => {\r\n      playerSate.loadPlayer(response);\r\n    });\r\n  },\r\n\r\n  removeStars: async (stars: number) => {\r\n    await agent.playerService.removeStarsAsync(stars).then(() => {\r\n      playerSate.removeStars(stars);\r\n    });\r\n  },\r\n\r\n  completeLevel: async (model: CompleteLevelModel) => {\r\n    await agent.playerService.processCompleteLevel(model).then(() => {\r\n      playerSate.processLevelCompletion(model.gameScore);\r\n    });\r\n  },\r\n};\r\n","import { history } from \"../..\";\r\nimport { agent } from \"../../api/agent\";\r\nimport { CompleteLevelModel } from \"../../interfaces/CompleteLevelModel\";\r\nimport { FormModel } from \"../../interfaces/FormModel\";\r\nimport { RegistrationFormModel } from \"../../interfaces/RegistrationFormModel\";\r\nimport { routes } from \"../routes/routes\";\r\nimport { gameState, levelState, playerSate, sessionState } from \"../state/stateService\";\r\nimport store from \"../store\";\r\nimport { levelService } from \"./levelService\";\r\nimport { playerService } from \"./playerService\";\r\nimport { userSession } from \"./userSession\";\r\n\r\nconst GetLevelCompletionModel = () => {\r\n  const gameScoreReward = store.getState().level.gameScoreReward;\r\n  const stars = store.getState().player.stars;\r\n  const levelId = store.getState().level.id; // push updated amount of player stars to API\r\n  const data: CompleteLevelModel = {\r\n    stars: stars,\r\n    gameScore: gameScoreReward,\r\n    levelId: levelId,\r\n  };\r\n\r\n  return data;\r\n};\r\n\r\nconst verifyGuess = (secret: string, maskedSecret: string[], letter: string): boolean => {\r\n  return secret.toUpperCase().includes(letter) && !maskedSecret.toString().toUpperCase().includes(letter);\r\n};\r\n\r\nconst updatedMaskedSecret = (letter: string, secret: string): number => {\r\n  // correct letter counter in case word have more than one the same letter\r\n  // in that case all letters will be included\r\n  let correctLetters = 0;\r\n\r\n  for (let i = 0; i < secret.length; i++) {\r\n    if (secret[i].toUpperCase() === letter) {\r\n      levelState.updateMask(i);\r\n      correctLetters++;\r\n    }\r\n  }\r\n\r\n  return correctLetters;\r\n};\r\n\r\nexport const engine = {\r\n  loginPlayer: (values: FormModel) => {\r\n    agent.accountService.loginAsync(values).then((response) => {\r\n      playerSate.loadPlayer(response.data);\r\n      userSession.loginSession(response.token);\r\n      levelService.loadLevel().then(() => {\r\n        history.push(routes.gameBoard);\r\n      });\r\n    });\r\n  },\r\n\r\n  returnPlayer: () => {\r\n    playerService.loadPlayer().then(() => {\r\n      levelService.loadLevel();\r\n    });\r\n  },\r\n\r\n  logOutPlayer: () => {\r\n    userSession.removeToken();\r\n    sessionState.logout();\r\n    history.push(\"/\");\r\n  },\r\n\r\n  showHint: (id: string, price: number) => {\r\n    levelService.showHint(id).then(() => {\r\n      playerService.removeStars(price);\r\n    });\r\n  },\r\n\r\n  processLevelCompletion: () => {\r\n    const levelCompletionData = GetLevelCompletionModel();\r\n    playerService.completeLevel(levelCompletionData);\r\n  },\r\n\r\n  registerPlayer: (values: RegistrationFormModel) => {\r\n    agent.accountService.registerAsync(values).then((response) => {\r\n      gameState.isLoading(true);\r\n      playerSate.loadPlayer(response.data);\r\n      levelService.loadLevel();\r\n      userSession.loginSession(response.token);\r\n      history.push(routes.gameBoard);\r\n    });\r\n  },\r\n\r\n  disableKey: (e: any) => {\r\n    e.target.classList.add(\"used\");\r\n  },\r\n\r\n  processGuess: (letter: string) => {\r\n    const level = store.getState().level;\r\n    // increment failed guess counter if guess is not correct\r\n    if (verifyGuess(level.secret, level.secretMask, letter) === false) {\r\n      gameState.processFailedGuess();\r\n    } else {\r\n      const correctLetters = updatedMaskedSecret(letter, level.secret);\r\n      gameState.processCorrectGuess(correctLetters);\r\n      playerSate.addStars(level.starReward);\r\n    }\r\n  },\r\n\r\n  getLeaderboard: async () => {\r\n    return await agent.gameService.getLeaderboardData();\r\n  },\r\n\r\n  restart: () => {\r\n    gameState.reset();\r\n    levelService.restartLevel();\r\n  },\r\n\r\n  loadNewLevel: () => {\r\n    gameState.isLoading(true);\r\n    levelService.loadLevel();\r\n  },\r\n};\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { routes } from \"../../app/routes/routes\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { FormModel } from \"../../interfaces/FormModel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required(\"Username required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst handleSubmit = (loginValues: FormModel) => {\r\n  engine.loginPlayer(loginValues);\r\n};\r\n\r\nexport const LoginForm: React.FC = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values: FormModel) => handleSubmit(values)}\r\n    >\r\n      <Form className=\"form\">\r\n        <div className=\"form-row\">\r\n          <ErrorMessage className=\"error-msg\" name=\"username\" />\r\n          <Field\r\n            className=\"input\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <ErrorMessage className=\"error-msg\" name=\"password\" />\r\n          <Field className=\"input\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n        </div>\r\n        <div className=\"button-row\">\r\n          <Link to={routes.homePage} className=\"button\">\r\n            Back\r\n          </Link>\r\n          <button className=\"button\" type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { routes } from \"../../app/routes/routes\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { RegistrationFormModel } from \"../../interfaces/RegistrationFormModel\";\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string().required(\"Username is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"Password confirmation is required\")\r\n    .oneOf([Yup.ref(\"password\")], \"Passwords does not match\"),\r\n});\r\n\r\nconst initialValues: RegistrationFormModel = {\r\n  username: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst handleSubmit = (values: RegistrationFormModel) => {\r\n  engine.registerPlayer(values);\r\n};\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => handleSubmit(values)}\r\n    >\r\n      <Form className=\"form\">\r\n        <div className=\"form-row\">\r\n          <ErrorMessage className=\"error-msg\" name=\"username\" />\r\n          <Field\r\n            className=\"input\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <ErrorMessage className=\"error-msg\" name=\"password\" />\r\n          <Field className=\"input\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <ErrorMessage className=\"error-msg\" name=\"confirmPassword\" />\r\n          <Field\r\n            className=\"input\"\r\n            id=\"confirmPassword\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm password\"\r\n          />\r\n        </div>\r\n        <div className=\"button-row\">\r\n          <Link to={routes.homePage} className=\"button\">\r\n            Back\r\n          </Link>\r\n          <button className=\"button\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { history } from \"../..\";\r\nimport { routes } from \"../../app/routes/routes\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\nconst handleClick = () => {\r\n  engine.logOutPlayer();\r\n};\r\n\r\nexport const Header: React.FC = () => {\r\n  const username = useSelector((state: RootState) => state.player.userName);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <p className=\"username\">{username}</p>\r\n      <div className=\"links\">\r\n        <p className=\"button\" onClick={() => history.push(routes.leaderboard)}>\r\n          Leader Board\r\n        </p>\r\n        <p className=\"button\" onClick={handleClick}>\r\n          Log out\r\n        </p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\ninterface HintProps {\r\n  id: string;\r\n  clue: string;\r\n  price: number;\r\n  show: boolean;\r\n}\r\n\r\nexport const Hint: React.FC<HintProps> = (props) => {\r\n  const { id, clue, price, show } = props;\r\n\r\n  const playerStars = useSelector((state: RootState) => state.player.stars);\r\n\r\n  // disable SHOW button if player do not have enough stars to buy a hint\r\n  // empty space after \"disabled\" is to separate two classes\r\n  let isDisabled = playerStars < price ? \"disabled \" : \"\";\r\n\r\n  // check if player have enough stars to pay for the hint\r\n  // this protects from trying to cheat by removing class from the button that dissables it\r\n  const handleClick = () => {\r\n    playerStars >= price && engine.showHint(id, price);\r\n  };\r\n\r\n  if (show) {\r\n    return <p>{clue}</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>Click SHOW to reveal this clue</p>\r\n      <p>Cost: {price} stars</p>\r\n      <p className={isDisabled + \"button\"} onClick={() => handleClick()}>\r\n        SHOW\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Hint } from \"./Hint\";\r\n\r\nexport const HintsContainer: React.FC = () => {\r\n  const hints = useSelector((state: RootState) => state.level.hints);\r\n\r\n  return (\r\n    <section>\r\n      <ul className=\"hints\">\r\n        {hints.map((hint) => {\r\n          return (\r\n            <li key={hint.id} className=\"hint\">\r\n              <Hint {...hint} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { engine } from \"../../app/services/engine\";\r\n\r\ninterface KeyProps {\r\n  letter: string;\r\n}\r\n\r\nconst handleClick = (e: any, letter: string) => {\r\n  engine.disableKey(e);\r\n  engine.processGuess(letter);\r\n};\r\n\r\nexport const Key: React.FC<KeyProps> = (props) => {\r\n  const { letter } = props;\r\n\r\n  return (\r\n    <p className=\"key-letter button\" onClick={(e) => handleClick(e, letter)}>\r\n      {letter}\r\n    </p>\r\n  );\r\n};\r\n","import { Key } from \"./Key\";\r\n\r\nconst topRow = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\r\nconst middleRow = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\r\nconst bottomRow = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\r\n\r\nexport const Keyboard: React.FC = () => {\r\n  return (\r\n    <section className=\"keyboard\">\r\n      <div className=\"keyboard-row\">\r\n        {topRow.map((key) => {\r\n          return <Key key={key} letter={key} />;\r\n        })}\r\n      </div>\r\n      <div className=\"keyboard-row\">\r\n        {middleRow.map((key) => {\r\n          return <Key key={key} letter={key} />;\r\n        })}\r\n      </div>\r\n      <div className=\"keyboard-row\">\r\n        {bottomRow.map((key) => {\r\n          return <Key key={key} letter={key} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { engine } from \"../../app/services/engine\";\r\n\r\nconst handleClick = () => {\r\n  engine.restart();\r\n};\r\n\r\nexport const GameOverMessage: React.FC = () => {\r\n  return (\r\n    <div className=\"message\">\r\n      <h2 className=\"title\">Game Over...</h2>\r\n      <p className=\"button\" onClick={handleClick}>\r\n        Click to restart\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { engine } from \"../../app/services/engine\";\r\n\r\nconst handleClick = () => {\r\n  engine.loadNewLevel();\r\n};\r\n\r\nexport const LevelCompleteMessage: React.FC = () => {\r\n  return (\r\n    <div className=\"message\">\r\n      <h2 className=\"title\">Level complete...</h2>\r\n      <p className=\"button\" onClick={handleClick}>\r\n        Click to continue\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LoadingMessage: React.FC = () => {\r\n  return (\r\n    <div className=\"message\">\r\n      <h2 className=\"title\">Loading...</h2>\r\n    </div>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { ReactComponent as Mask } from \"../../images/mask.svg\";\r\n\r\nexport const Quiz: React.FC = () => {\r\n  const clue = useSelector((state: RootState) => state.level.clue);\r\n  const hiddenSecret = useSelector((state: RootState) => state.level.secretMask);\r\n\r\n  return (\r\n    <section className=\"quiz-container\">\r\n      <h5 className=\"clue\">{clue}</h5>\r\n      <div className=\"secret\">\r\n        {hiddenSecret.map((letter, index) => {\r\n          return letter === \"#\" ? (\r\n            <p key={index} className=\"letter\">\r\n              <Mask key={index} />\r\n            </p>\r\n          ) : (\r\n            <p key={index} className=\"letter\">\r\n              {letter}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { HintsContainer } from \"../hints/HintsContainer\";\r\nimport { Keyboard } from \"../keyboard/Keyboard\";\r\nimport { GameOverMessage } from \"../messages/GameOverMessage\";\r\nimport { LevelCompleteMessage } from \"../messages/LevelCompleteMessage\";\r\nimport { LoadingMessage } from \"../messages/LoadingMessage\";\r\nimport { Message } from \"../messages/Message\";\r\nimport { Quiz } from \"../quiz/Quiz\";\r\n\r\nconst PlayArea: React.FC = () => {\r\n  const isLoading = useSelector((state: RootState) => state.game.isLoading);\r\n  const isLevelComplete = useSelector((state: RootState) => state.level.isComplete);\r\n  const isGameOver = useSelector((state: RootState) => state.game.availableGuesses === 0);\r\n\r\n  if (isLoading) {\r\n    return <LoadingMessage />;\r\n  }\r\n\r\n  if (isLevelComplete) {\r\n    return <LevelCompleteMessage />;\r\n  }\r\n\r\n  if (isGameOver) {\r\n    return <GameOverMessage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"play-area\">\r\n      <Quiz />\r\n      <HintsContainer />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { PlayArea };\r\n","export default __webpack_public_path__ + \"static/media/hangman-0.dc6d25b0.png\";","export default __webpack_public_path__ + \"static/media/hangman-2.9c1d99b6.png\";","export default __webpack_public_path__ + \"static/media/hangman-3.42b06d99.png\";","export default __webpack_public_path__ + \"static/media/hangman-1.87eeefc7.png\";","export default __webpack_public_path__ + \"static/media/hangman-4.94dd341e.png\";","export default __webpack_public_path__ + \"static/media/hangman-5.3b80d7c0.png\";","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../app/store\";\r\n\r\nimport hangman_0 from \"../../../images/character/hangman-0.png\";\r\nimport hangman_2 from \"../../../images/character/hangman-2.png\";\r\nimport hangman_3 from \"../../../images/character/hangman-3.png\";\r\nimport hangman_1 from \"../../../images/character/hangman-1.png\";\r\nimport hangman_4 from \"../../../images/character/hangman-4.png\";\r\nimport hangman_5 from \"../../../images/character/hangman-5.png\";\r\nimport hangman_6 from \"../../../images/character/hangman-6.png\";\r\n\r\nconst hangman = [hangman_6, hangman_5, hangman_4, hangman_3, hangman_2, hangman_1, hangman_0];\r\n\r\nexport const HangmanImage: React.FC = () => {\r\n  const imageIndex = useSelector((state: RootState) => state.game.failedGuesses);\r\n\r\n  return (\r\n    <div className=\"hangman\">\r\n      <img src={hangman[imageIndex]} alt=\"hangman\" />\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/hangman-6.7018a2f6.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../app/store\";\r\n\r\nexport const Statistics: React.FC = () => {\r\n  const player = useSelector((state: RootState) => state.player);\r\n  const difficulty = useSelector((state: RootState) => state.level.difficulty);\r\n\r\n  return (\r\n    <div className=\"statistics\">\r\n      <p>Game Score: {player.gameScore}</p>\r\n      <p>Stars: {player.stars}</p>\r\n      <p>Levels Completed: {player.completeLevels}</p>\r\n      <p>Difficulty: {difficulty}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HangmanImage } from \"./hangman/HangmanImage\";\r\nimport { Statistics } from \"./statistics/Statistics\";\r\n\r\nexport const SideBar: React.FC = () => {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <Statistics />\r\n      <HangmanImage />\r\n    </aside>\r\n  );\r\n};\r\n","import { Header } from \"../header/Header\";\r\nimport { PlayArea } from \"../playArea/PlayArea\";\r\nimport { SideBar } from \"../sidebar/SideBar\";\r\n\r\nexport const GameBoard: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <PlayArea />\r\n      <SideBar />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../app/routes/routes\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1 className=\"title\">Welcome to the hangman game</h1>\r\n      <div className=\"button-row\">\r\n        <Link to={{ pathname: routes.register }} className=\"button\">\r\n          Register\r\n        </Link>\r\n        <Link to={{ pathname: routes.login }} className=\"button\">\r\n          Log In\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { history } from \"../..\";\r\nimport { routes } from \"../../app/routes/routes\";\r\n\r\nexport const NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"message fullscreen\">\r\n      <h2 className=\"title\">What you are looking for is not here...</h2>\r\n      <p className=\"button\" onClick={() => history.push(routes.homePage)}>\r\n        Go to Home Page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { history } from \"../..\";\r\nimport { routes } from \"../../app/routes/routes\";\r\nimport { RootState } from \"../../app/store\";\r\n\r\nexport const ServerError: React.FC = () => {\r\n  const error = useSelector((state: RootState) => state.error);\r\n  return (\r\n    <div className=\"message fullscreen\">\r\n      <h2 className=\"title\">Internal server error....</h2>\r\n      <p>Status code: {error.statusCode}</p>\r\n      <p>Error code: {error.message}</p>\r\n      <p className=\"button\" onClick={() => history.push(routes.homePage)}>\r\n        Go to Home Page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { history } from \"../..\";\r\nimport { routes } from \"../../app/routes/routes\";\r\n\r\nexport const Unauthorized: React.FC = () => {\r\n  return (\r\n    <div className=\"message fullscreen\">\r\n      <h2 className=\"title\">Access denied...</h2>\r\n      <p className=\"button\" onClick={() => history.push(routes.homePage)}>\r\n        Go to Home Page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { history } from \"../..\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { LeaderboardEntry } from \"../../interfaces/LeaderboardEntry\";\r\n\r\nexport const Leaderboard = () => {\r\n  const [records, setRecords] = useState<LeaderboardEntry[]>([]);\r\n  useEffect(() => {\r\n    engine.getLeaderboard().then((response) => {\r\n      setRecords(response);\r\n    });\r\n  }, []);\r\n\r\n  console.log(records);\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Position</th>\r\n              <th>Username</th>\r\n              <th>Game Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map((row, index) => {\r\n              return (\r\n                <tr key={row.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{row.username}</td>\r\n                  <td>{row.gameScore}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <p onClick={() => history.goBack()} className=\"button\">\r\n          Back\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { routes } from \"../../app/routes/routes\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { LoginForm } from \"../forms/LoginForm\";\r\nimport { RegistrationForm } from \"../forms/RegistrationForm\";\r\nimport { GameBoard } from \"../gameboard/GameBoard\";\r\nimport { HomePage } from \"../home/HomePage\";\r\nimport \"react-toastify/dist/ReactToastify.minimal.css\";\r\nimport { NotFound } from \"../errors/NotFound\";\r\nimport { ServerError } from \"../errors/ServerError\";\r\nimport { Unauthorized } from \"../errors/Unauthorized\";\r\nimport { engine } from \"../../app/services/engine\";\r\nimport { Leaderboard } from \"../leaderboard/Leaderboard\";\r\n\r\nfunction App() {\r\n  const isLevelComplete = useSelector((state: RootState) => state.level.isComplete);\r\n  const isLogedIn = useSelector((state: RootState) => state.session.isLogedIn);\r\n  const isErrorSet = useSelector((state: RootState) => state.error.isSet);\r\n\r\n  // handle player re-log and level loading when browser is refreshed\r\n  useEffect(() => {\r\n    if (isLogedIn) {\r\n      engine.returnPlayer();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLevelComplete) {\r\n      engine.processLevelCompletion();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLevelComplete]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"top-center\" autoClose={1500} hideProgressBar />\r\n      <main className=\"game-board\">\r\n        <Switch>\r\n          <Route exact path={routes.homePage} component={HomePage} />\r\n          <Route path={routes.register} component={RegistrationForm} />\r\n          <Route path={routes.login} component={LoginForm} />\r\n          <Route path={routes.serverError} component={isErrorSet ? ServerError : NotFound} />\r\n          <Route path={routes.gameBoard} component={isLogedIn ? GameBoard : Unauthorized} />\r\n          <Route path={routes.leaderboard} component={isLogedIn ? Leaderboard : Unauthorized} />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Router } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport App from \"./components/application/App\";\r\nimport store from \"./app/store\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"./styles/styles.css\";\r\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />;\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"annonymus\" />;\r\n<link href=\"https://fonts.googleapis.com/css2?family=Patrick+Hand+SC&display=swap\" rel=\"stylesheet\" />;\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}